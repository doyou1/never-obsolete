version: '3.8'

services:
  # GitHub Flow Analyzer 메인 애플리케이션
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: github-flow-analyzer
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/github_flow_analyzer
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./analysis-reports:/app/analysis-reports
      - ./.commands:/app/.commands
    networks:
      - github-flow-network
    healthcheck:
      test: ["CMD", "node", "dist/health.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: github-flow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: github_flow_analyzer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-scripts:/docker-entrypoint-initdb.d/:ro
    networks:
      - github-flow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d github_flow_analyzer"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: github-flow-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redispassword
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - github-flow-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # 개발용 데이터베이스 관리 도구 (선택사항)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: github-flow-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - github-flow-network
    depends_on:
      - postgres
    profiles:
      - dev

  # Redis Commander (선택사항)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: github-flow-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redispassword
    ports:
      - "8081:8081"
    networks:
      - github-flow-network
    depends_on:
      - redis
    profiles:
      - dev

  # 로그 수집 (선택사항)
  fluent-bit:
    image: fluent/fluent-bit:latest
    container_name: github-flow-logs
    restart: unless-stopped
    volumes:
      - ./logs:/var/log/app:ro
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
    networks:
      - github-flow-network
    depends_on:
      - app
    profiles:
      - monitoring

# 볼륨 정의
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

# 네트워크 정의
networks:
  github-flow-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16