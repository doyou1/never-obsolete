# ==============================================
# GitHub 소스코드 플로우 분석 Slack Bot 환경 변수
# ==============================================

# 애플리케이션 환경
NODE_ENV=development
PORT=3000
LOG_LEVEL=info

# GitHub 연동 설정
GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
GITHUB_WEBHOOK_SECRET=your_github_webhook_secret_here
GITHUB_API_BASE_URL=https://api.github.com

# GitHub API Rate Limiting
GITHUB_RATE_LIMIT_REQUESTS_PER_HOUR=5000
GITHUB_RATE_LIMIT_REQUESTS_PER_MINUTE=100

# Slack Bot 설정
SLACK_BOT_TOKEN=xoxb-xxxxxxxxxxxx-xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxx
SLACK_SIGNING_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
SLACK_APP_TOKEN=xapp-xxxxxxxxxxxx-xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxx

# Slack 허용 워크스페이스 (쉼표로 구분)
ALLOWED_WORKSPACES=T1234567890,T0987654321
SLACK_PORT=3001

# 데이터베이스 설정 (PostgreSQL)
DATABASE_URL=postgresql://username:password@localhost:5432/github_flow_analyzer
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=github_flow_analyzer
DATABASE_USER=username
DATABASE_PASSWORD=password
DATABASE_MAX_CONNECTIONS=20
DATABASE_CONNECTION_TIMEOUT_MS=30000
DATABASE_QUERY_TIMEOUT_MS=60000

# Redis 캐시 설정
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_KEY_PREFIX=github-flow-analyzer:
REDIS_DEFAULT_TTL_SECONDS=3600

# 캐시 TTL 설정 (초 단위)
CACHE_GITHUB_API_TTL=1800          # 30분
CACHE_ANALYSIS_RESULT_TTL=86400    # 24시간
CACHE_FILE_CONTENT_TTL=3600        # 1시간

# 분석 엔진 설정
MAX_FILE_SIZE_BYTES=10485760       # 10MB
MAX_ANALYSIS_TIME_MS=300000        # 5분
MAX_FILES_PER_ANALYSIS=1000
MAX_CONCURRENT_ANALYSES=5

# 지원 파일 확장자 (쉼표로 구분)
SUPPORTED_FILE_EXTENSIONS=.ts,.js,.tsx,.jsx,.json,.sql,.md

# 엔트리 포인트 패턴 (세미콜론으로 구분)
ENTRY_POINT_PATTERNS=clientv/router.ts;src/routes/*.ts;routes/*.js

# AWS 설정 (Lambda 배포용)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key

# 모니터링 및 로깅
WINSTON_LOG_FILE=logs/app.log
WINSTON_ERROR_FILE=logs/error.log
WINSTON_MAX_FILE_SIZE=5242880      # 5MB
WINSTON_MAX_FILES=5

# Bull Queue 설정 (작업 큐)
BULL_REDIS_URL=redis://localhost:6379
BULL_CONCURRENCY=5
BULL_MAX_ATTEMPTS=3
BULL_BACKOFF_DELAY=60000           # 1분

# Rate Limiting
RATE_LIMIT_WORKSPACE_PER_HOUR=1000
RATE_LIMIT_USER_PER_HOUR=100
RATE_LIMIT_IP_PER_HOUR=500

# Claude Code 통합
CLAUDE_CODE_COMMANDS_DIR=.commands
CLAUDE_CODE_OUTPUT_DIR=analysis-reports

# 보안 설정
JWT_SECRET=your_jwt_secret_here_with_at_least_32_characters
ENCRYPTION_KEY=your_encryption_key_here_with_32_characters
CORS_ALLOWED_ORIGINS=http://localhost:3000,https://your-domain.com

# 개발 환경 설정
DEV_MOCK_GITHUB_API=false
DEV_SKIP_AUTHENTICATION=false
DEV_LOG_SQL_QUERIES=true

# 프로덕션 환경 설정
PROD_FORCE_HTTPS=true
PROD_TRUST_PROXY=true
PROD_HELMET_CSP=true

# 건강 체크 설정
HEALTH_CHECK_INTERVAL_MS=30000     # 30초
HEALTH_CHECK_TIMEOUT_MS=5000       # 5초

# 메트릭 및 통계
ENABLE_METRICS=true
METRICS_COLLECTION_INTERVAL_MS=60000  # 1분

# 알림 설정
SLACK_ERROR_NOTIFICATION_CHANNEL=#alerts
SLACK_STATUS_NOTIFICATION_CHANNEL=#github-flow-analyzer

# 백업 설정
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *          # 매일 오전 2시
BACKUP_RETENTION_DAYS=30